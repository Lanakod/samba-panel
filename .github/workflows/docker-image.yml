name: Docker Image CI

on:
  push:
    branches: [ master ]
    tags: [ v* ]

env:
  GHCR_REPO: ghcr.io/lanakod/samba-panel
  DOCKERHUB_REPO: lanakod/samba-panel

jobs:
  notify-start:
    runs-on: ubuntu-latest
    environment: Docker Build
    steps:
      - name: Notify Telegram (Start)
        run: |
          TIMESTAMP=$(TZ='Europe/Moscow' date +"%Y-%m-%d %H:%M:%S %Z")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üöÄ CI started for *${{ github.repository }}* at commit [\`${{ github.sha}}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha}}) on \`${TIMESTAMP}\`" \
            -d parse_mode=Markdown

  test:
    runs-on: ubuntu-latest
    needs: notify-start
    environment: Docker Build
    steps:
      - uses: actions/checkout@v2

      - name: Run Tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

      - name: Notify Telegram (Test Success)
        run: |
          TIMESTAMP=$(TZ='Europe/Moscow' date +"%Y-%m-%d %H:%M:%S %Z")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚úÖ Tests passed for *${{ github.repository }}* at commit [\`${{ github.sha}}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha}}) on \`${TIMESTAMP}\`" \
            -d parse_mode=Markdown

  docker-amd64:
    runs-on: ubuntu-latest
    needs: test
    environment: Docker Build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract tags/versions
        id: meta
        run: |
          IMAGE_TAGS="latest,latest-arm"

          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
            IMAGE_TAGS="${VERSION},${VERSION}-arm"
          fi

          echo "TAGS=$IMAGE_TAGS" >> $GITHUB_ENV

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.GHCR_REPO }}:${{ env.IMAGE_TAGS }}
            ${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Notify Telegram (AMD64 Pushed)
        run: |
          TIMESTAMP=$(TZ='Europe/Moscow' date +"%Y-%m-%d %H:%M:%S %Z")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üì¶ *AMD64 Docker image pushed* as \`${{ env.DOCKERHUB_REPO }}:latest\`\nüîó Commit: [\`${{ github.sha}}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha}}) on \`${TIMESTAMP}\`" \
            -d parse_mode=Markdown

  docker-arm64:
    runs-on: ubuntu-latest
    needs: test
    environment: Docker Build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract tags/versions
        id: meta
        run: |
          IMAGE_TAGS="latest,latest-arm"

          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
            IMAGE_TAGS="${VERSION},${VERSION}-arm"
          fi

          echo "TAGS=$IMAGE_TAGS" >> $GITHUB_ENV

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: |
            ${{ env.GHCR_REPO }}:${{ env.IMAGE_TAGS }}
            ${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Notify Telegram (ARM64 Pushed)
        run: |
          TIMESTAMP=$(TZ='Europe/Moscow' date +"%Y-%m-%d %H:%M:%S %Z")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üì¶ *ARM64 Docker image pushed* as \`${{ env.DOCKERHUB_REPO }}:latest-arm\`\nüîó Commit: [\`${{ github.sha}}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha}}) on \`${TIMESTAMP}\`" \
            -d parse_mode=Markdown

  notify-failure:
    if: failure()
    runs-on: ubuntu-latest
    environment: Docker Build
    needs: [test, docker-amd64, docker-arm64]
    steps:
      - name: Notify Telegram - Build Failed
        run: |
          TIMESTAMP=$(TZ='Europe/Moscow' date +"%Y-%m-%d %H:%M:%S %Z")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚ùå *Build failed* for [${{ github.repository }}@${{ github.sha}}](https://github.com/${{ github.repository }}/commit/${{ github.sha}}) on \`${{ github.ref_name }}\` on \`${TIMESTAMP}\`" \
            -d parse_mode=Markdown
