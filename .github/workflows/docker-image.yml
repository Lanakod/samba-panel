name: Docker Image CI

on:
  push:
    branches:
      - master
    tags:
      - v*

env:
  IMAGE_NAME: samba-panel

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      SMB_CONF_PATH: ${{ secrets.SMB_CONF_PATH }}
      SMBPASSWD_PATH: ${{ secrets.SMBPASSWD_PATH }}
      NEXT_PUBLIC_PANEL_URL: ${{ secrets.NEXT_PUBLIC_PANEL_URL }}
      CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi  
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      SMB_CONF_PATH: ${{ secrets.SMB_CONF_PATH }}
      SMBPASSWD_PATH: ${{ secrets.SMBPASSWD_PATH }}
      NEXT_PUBLIC_PANEL_URL: ${{ secrets.NEXT_PUBLIC_PANEL_URL }}
      CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build . \
            --file Dockerfile \
            --tag $IMAGE_NAME \
            --label "org.opencontainers.image.source=https://github.com/${{ github.repository }}"

      - name: Log into registry
        run: echo "${{ secrets.AUTH_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION      
