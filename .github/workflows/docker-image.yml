name: Docker Image CI

on:
  push:
    branches: [ master ]
    tags: [ v* ]

env:
  IMAGE_NAME: samba-panel
  GHCR_REPO: ghcr.io/lanakod/samba-panel
  DOCKERHUB_REPO: lanakod/samba-panel

jobs:
  notify-start:
    runs-on: ubuntu-latest
    environment: Docker Build
    steps:
      - name: Notify Telegram - CI Started
        run: |
          TIMESTAMP=$(TZ='Europe/Moscow' date +"%Y-%m-%d %H:%M:%S %Z")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üöÄ *CI started* for [${{ github.repository }}@\`${{ github.sha.substr(0,7) }}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) on \`${TIMESTAMP}\`" \
            -d parse_mode=Markdown

  test:
    needs: notify-start
    runs-on: ubuntu-latest
    environment: Docker Build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  notify-test:
    needs: test
    runs-on: ubuntu-latest
    environment: Docker Build
    steps:
      - name: Notify Telegram - Tests Passed
        run: |
          TIMESTAMP=$(TZ='Europe/Moscow' date +"%Y-%m-%d %H:%M:%S %Z")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚úÖ *Tests passed* for [${{ github.repository }}@\`${{ github.sha.substr(0,7) }}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) on \`${TIMESTAMP}\`" \
            -d parse_mode=Markdown

  docker:
    needs: test
    runs-on: ubuntu-latest
    environment: Docker Build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push AMD64 image to latest tag
        run: |
          docker build --platform linux/amd64 -t $DOCKERHUB_REPO:latest .
          docker push $DOCKERHUB_REPO:latest

      - name: Build and push ARM64 image to latest-arm tag
        run: |
          docker build --platform linux/arm64 -t $DOCKERHUB_REPO:latest-arm .
          docker push $DOCKERHUB_REPO:latest-arm

      - name: Build and push AMD64 image to GHCR latest tag
        run: |
          docker build --platform linux/amd64 -t $GHCR_REPO:latest .
          docker push $GHCR_REPO:latest

      - name: Build and push ARM64 image to GHCR latest-arm tag
        run: |
          docker build --platform linux/arm64 -t $GHCR_REPO:latest-arm .
          docker push $GHCR_REPO:latest-arm

  notify-docker:
    needs: docker
    runs-on: ubuntu-latest
    environment: Docker Build
    steps:
      - name: Notify Telegram - Docker Images Pushed
        run: |
          TIMESTAMP=$(TZ='Europe/Moscow' date +"%Y-%m-%d %H:%M:%S %Z")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üì¶ *Docker images pushed* for [${{ github.repository }}@\`${{ github.sha.substr(0,7) }}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) on \`${TIMESTAMP}\`" \
            -d parse_mode=Markdown

  notify-failure:
    if: failure()
    runs-on: ubuntu-latest
    environment: Docker Build
    needs: [test, docker]
    steps:
      - name: Notify Telegram - Build Failed
        run: |
          TIMESTAMP=$(TZ='Europe/Moscow' date +"%Y-%m-%d %H:%M:%S %Z")
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚ùå *Build failed* for [${{ github.repository }}@\`${{ github.sha.substr(0,7) }}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) on \`${TIMESTAMP}\`" \
            -d parse_mode=Markdown
