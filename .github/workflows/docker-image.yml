name: Docker Image CI

on:
  push:
    branches: [ master ]
    tags: [ v* ]

env:
  IMAGE_NAME: samba-panel
  GHCR_REPO: ghcr.io/lanakod/samba-panel
  DOCKERHUB_REPO: lanakod/samba-panel

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  docker:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    environment: Docker Build
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, versions)
        id: meta
        run: |
          REF=${GITHUB_REF##*/}
          if [[ "${GITHUB_REF}" == refs/heads/master ]]; then
            echo "TAGS=latest,latest-arm" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${REF#v}
            echo "TAGS=${VERSION},${VERSION}-arm" >> $GITHUB_OUTPUT
          fi

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push multi-arch images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.TAGS }}
            ${{ env.DOCKERHUB_REPO }}:${{ steps.meta.outputs.TAGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
